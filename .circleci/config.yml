version: 2.1
parameters:
  image-tag:
    type: string
    default: "reagent/reagent:gpu_test"

# How to test the Linux jobs:
#   - Install CircleCI local CLI: https://circleci.com/docs/2.0/local-cli/
#   - circleci config process .circleci/config.yml > gen.yml && circleci local execute -c gen.yml --job binary_linux_conda_py3.7_cpu
#     - Replace binary_linux_conda_py3.7_cpu with the name of the job you want to test.
#       Job names are 'name:' key.

commands:
  checkout_merge:
    description: "checkout merge branch"
    steps:
      - checkout
      - run:
          name: Checkout merge branch
          command: |
            set -ex
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            if [[ "$BRANCH" != "master" ]]; then
              git merge origin/master
            fi
  
  python37:
    description: "Switch to python 3.7"
    steps:
      - run:
          name: Setup to python 3.7
          command: |
            pyenv global 3.7.0
            pip install --upgrade pip
            pip install tox


binary_common: &binary_common
  parameters:
    docker_image:
      description: "Docker image"
      type: string
    resource_class_str:
      description: "Resource class to use"
      type: string
    test_script:
      description: "Path to test script"
      type: string
  environment:
    DOCKER_IMAGE: << parameters.docker_image >>

jobs:
  binary_linux_conda:
    <<: *binary_common
    docker:
      - image: << parameters.docker_image >>
    resource_class: << parameters.resource_class_str >>
    steps:
      - checkout_merge
      - run: << parameters.test_script >>

  gpu_unittest:
    machine:
      image: ubuntu-1604-cuda-10.1:201909-23
    resource_class: gpu.medium
    steps:
      - checkout_merge
      - python37
      - run:
          name: Run unittests
          command: |
            tox

  end_to_end_test:
    docker:
      - image: circleci/openjdk:8u242-jdk
    resource_class: large
    steps:
      - checkout_merge
      - python37
      - run:
          name: Build preprocessing package
          command: |
            mvn -f preprocessing/pom.xml clean package
  
  rasp_test:
    docker:
      - image: cimg/base:2020.01
    resource_class: large
    steps:
      - checkout_merge
      - run:
          name: Install build deps
          command: |
            wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init
            conda install --file rasp_requirements.txt
      - run:
          name: Download libtorch
          command: |
            pushd ..
            wget https://download.pytorch.org/libtorch/nightly/cpu/libtorch-cxx11-abi-shared-with-deps-latest.zip
            unzip libtorch-cxx11-abi-shared-with-deps-latest.zip
            popd
      - run:
          name: Clone submodules
          command: |
            git submodule update --force --recursive --init --remote
      - run:
          name: Build RASP
          command: |
            source $HOME/miniconda/bin/activate
            echo $HOME
            mkdir -p serving/build
            pushd serving/build
            cmake -DCMAKE_PREFIX_PATH=$HOME/libtorch ..
            make -j2
            popd
      - run:
          name: Run RASP tests
          command: |
            serving/build/RaspTest



workflows:
  build:
    jobs:
      - end_to_end_test
      - gpu_unittest
      - rasp_test
