version: 2.1

# How to test the Linux jobs:
#   - Install CircleCI local CLI: https://circleci.com/docs/2.0/local-cli/
#   - circleci config process .circleci/config.yml > gen.yml && circleci local execute -c gen.yml --job end_to_end_test 
#     - Replace end_to_end_test with the name of the job you want to test.

commands:
  checkout_merge:
    description: "checkout merge branch"
    steps:
      - checkout
      - run:
          name: Checkout merge branch
          command: |
            set -ex
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            if [[ "$BRANCH" != "master" ]]; then
              git merge origin/master
            fi
  
jobs:
  gpu_unittest:
    machine:
      image: ubuntu-1604-cuda-10.1:201909-23
    resource_class: gpu.medium
    steps:
      - checkout_merge
      - run:
          name: Switch to python 3.7
          command: |
            pyenv global 3.7.0
            pip install --upgrade pip
            pip install tox
      - run:
          name: Run unittests
          command: |
            tox

  end_to_end_test:
    docker:
      - image: circleci/python:3.7
    resource_class: large
    environment:
      - BASH_ENV: ~/.bashrc
    steps:
      - checkout_merge
      - run:
          name: Pip install
          command: |
            pip install --upgrade pip
            sudo pip install -e .[gym]
      - run:
          name: Installing SDKs
          command: |
            mv ~/.bashrc ~/.bashrc.bk
            curl -s "https://get.sdkman.io" | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk version
            sdk install java 8.0.242.hs-adpt
            sdk install scala
            sdk install maven
            sdk install spark 2.3.3
      - run:
          name: Build preprocessing package
          command: |
            mvn -f preprocessing/pom.xml clean package
      - run:
          name: Run script
          command: |
            bash scripts/ci/run_end_to_end_test.sh

  rasp_test:
    docker:
      - image: cimg/base:2020.01
    resource_class: large
    steps:
      - checkout_merge
      - run:
          name: Install build deps
          command: |
            wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init
            conda install --file rasp_requirements.txt
      - run:
          name: Download libtorch
          command: |
            pushd ..
            wget https://download.pytorch.org/libtorch/nightly/cpu/libtorch-cxx11-abi-shared-with-deps-latest.zip
            unzip libtorch-cxx11-abi-shared-with-deps-latest.zip
            popd
      - run:
          name: Clone submodules
          command: |
            git submodule update --force --recursive --init --remote
      - run:
          name: Build RASP
          command: |
            source $HOME/miniconda/bin/activate
            echo $HOME
            mkdir -p serving/build
            pushd serving/build
            cmake -DCMAKE_PREFIX_PATH=$HOME/libtorch ..
            make -j2
            popd
      - run:
          name: Run RASP tests
          command: |
            serving/build/RaspTest

workflows:
  build:
    jobs:
      - end_to_end_test
      - gpu_unittest
      - rasp_test
